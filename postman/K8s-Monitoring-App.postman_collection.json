{
    "info": {
        "_postman_id": "k8s-monitoring-app-collection",
        "name": "K8s Monitoring App",
        "description": "Collection for testing K8s Monitoring App API endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Health Check",
            "item": [
                {
                    "name": "Health Check",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/health",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "health"
                            ]
                        },
                        "description": "Check application health status"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Login Page",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Display the login page with \"Sign in with Google\" button. This is a web page, not an API endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Initiate OAuth (Sign in with Google)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/google",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "google"
                            ]
                        },
                        "description": "Initiates the OAuth 2.0 flow with Google. Redirects to Google's authentication page.\n\nNote: This endpoint is meant to be used in a browser, as it involves redirects and OAuth flow. Testing in Postman will not complete the full authentication flow."
                    },
                    "response": []
                },
                {
                    "name": "OAuth Callback",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/callback?code=AUTHORIZATION_CODE&state=STATE_TOKEN",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "callback"
                            ],
                            "query": [
                                {
                                    "key": "code",
                                    "value": "AUTHORIZATION_CODE",
                                    "description": "Authorization code from Google OAuth"
                                },
                                {
                                    "key": "state",
                                    "value": "STATE_TOKEN",
                                    "description": "State token for CSRF protection"
                                }
                            ]
                        },
                        "description": "OAuth 2.0 callback endpoint. Google redirects here after user authentication.\n\nThis endpoint:\n1. Validates the state token\n2. Exchanges the authorization code for access token\n3. Retrieves user information from Google\n4. Validates email domain\n5. Creates a session\n6. Sets session cookie\n7. Redirects to dashboard\n\nNote: This is automatically called by Google OAuth flow. Manual testing is not recommended."
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/logout",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "logout"
                            ]
                        },
                        "description": "Logout endpoint. Deletes the user's session from the database and clears the session cookie.\n\nAfter logout, the user is redirected to the login page."
                    },
                    "response": []
                },
                {
                    "name": "Authentication Error Page",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/error?reason=domain_not_allowed",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "error"
                            ],
                            "query": [
                                {
                                    "key": "reason",
                                    "value": "domain_not_allowed",
                                    "description": "Error reason code"
                                }
                            ]
                        },
                        "description": "Display authentication error page with specific error message.\n\nPossible error reasons:\n- invalid_state: Invalid authentication state\n- no_code: No authorization code received\n- exchange_failed: Failed to exchange authorization code\n- user_info_failed: Failed to retrieve user information\n- email_not_verified: Email not verified with Google\n- domain_not_allowed: Email domain not authorized\n- session_failed: Failed to create session\n- unauthorized: Not authorized to access"
                    },
                    "response": []
                },
                {
                    "name": "Check Session (Protected Route)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                ""
                            ]
                        },
                        "description": "Test if you have a valid session by accessing the dashboard (protected route).\n\nIf authenticated: Shows the dashboard\nIf not authenticated: Redirects to /auth/login\n\nNote: In Postman, you need to manually manage cookies or use the Postman Interceptor to maintain sessions."
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints using Google OAuth 2.0.\n\n**Important Notes:**\n- OAuth flow requires a browser for full functionality\n- Sessions are managed via cookies\n- Only users from allowed domains can authenticate\n- All API endpoints (except these auth routes) require authentication\n\n**Configuration Required:**\n- GOOGLE_CLIENT_ID\n- GOOGLE_CLIENT_SECRET\n- GOOGLE_REDIRECT_URL\n- ALLOWED_GOOGLE_DOMAINS\n\n**For complete setup instructions, see:** docs/OAUTH_SETUP.md"
        },
        {
            "name": "Projects",
            "item": [
                {
                    "name": "List Projects",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects"
                            ]
                        },
                        "description": "List all projects"
                    },
                    "response": []
                },
                {
                    "name": "Get Project by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects/{{project_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects",
                                "{{project_id}}"
                            ]
                        },
                        "description": "Get a specific project by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set(\"project_id\", jsonData.id);",
                                    "    console.log(\"Project ID saved: \" + jsonData.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Production\",\n    \"description\": \"Production environment applications\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects"
                            ]
                        },
                        "description": "Create a new project"
                    },
                    "response": []
                },
                {
                    "name": "Update Project",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Production Updated\",\n    \"description\": \"Updated production environment\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects/{{project_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects",
                                "{{project_id}}"
                            ]
                        },
                        "description": "Update an existing project"
                    },
                    "response": []
                },
                {
                    "name": "Delete Project",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects/{{project_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects",
                                "{{project_id}}"
                            ]
                        },
                        "description": "Delete a project"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Applications",
            "item": [
                {
                    "name": "List All Applications",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications"
                            ]
                        },
                        "description": "List all applications"
                    },
                    "response": []
                },
                {
                    "name": "List Applications by Project",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects/{{project_id}}/applications",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects",
                                "{{project_id}}",
                                "applications"
                            ]
                        },
                        "description": "List applications for a specific project"
                    },
                    "response": []
                },
                {
                    "name": "Get Application by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{application_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{application_id}}"
                            ]
                        },
                        "description": "Get a specific application by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Application",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set(\"application_id\", jsonData.id);",
                                    "    console.log(\"Application ID saved: \" + jsonData.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"project_id\": \"{{project_id}}\",\n    \"name\": \"web-app\",\n    \"description\": \"Main web application\",\n    \"namespace\": \"production\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications"
                            ]
                        },
                        "description": "Create a new application"
                    },
                    "response": []
                },
                {
                    "name": "Update Application",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"web-app-updated\",\n    \"description\": \"Updated web application\",\n    \"namespace\": \"production\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{application_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{application_id}}"
                            ]
                        },
                        "description": "Update an existing application"
                    },
                    "response": []
                },
                {
                    "name": "Delete Application",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{application_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{application_id}}"
                            ]
                        },
                        "description": "Delete an application"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Metric Types",
            "item": [
                {
                    "name": "List Metric Types",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    ",
                                    "    // Save metric type IDs to environment",
                                    "    jsonData.forEach(function(metricType) {",
                                    "        var envVarName = metricType.name.toLowerCase().replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase() + '_type_id';",
                                    "        pm.environment.set(envVarName, metricType.id);",
                                    "        console.log(envVarName + ': ' + metricType.id);",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/metric-types",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "metric-types"
                            ]
                        },
                        "description": "List all available metric types"
                    },
                    "response": []
                },
                {
                    "name": "Get Metric Type by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/metric-types/{{healthcheck_type_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "metric-types",
                                "{{healthcheck_type_id}}"
                            ]
                        },
                        "description": "Get a specific metric type by ID"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Application Metrics",
            "item": [
                {
                    "name": "List All Application Metrics",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "List all application metrics"
                    },
                    "response": []
                },
                {
                    "name": "List Metrics by Application",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{application_id}}/metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{application_id}}",
                                "metrics"
                            ]
                        },
                        "description": "List metrics for a specific application"
                    },
                    "response": []
                },
                {
                    "name": "Get Application Metric by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}"
                            ]
                        },
                        "description": "Get a specific application metric by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create HealthCheck Metric",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set(\"application_metric_id\", jsonData.id);",
                                    "    console.log(\"Application Metric ID saved: \" + jsonData.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{healthcheck_type_id}}\",\n    \"configuration\": {\n        \"health_check_url\": \"http://web-app.production.svc.cluster.local:8080/health\",\n        \"method\": \"GET\",\n        \"expected_status\": 200,\n        \"timeout_seconds\": 10\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure health check monitoring for an application"
                    },
                    "response": []
                },
                {
                    "name": "Create PodStatus Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{podstatus_type_id}}\",\n    \"configuration\": {\n        \"pod_label_selector\": \"app=web-app\",\n        \"container_name\": \"web\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure pod status monitoring"
                    },
                    "response": []
                },
                {
                    "name": "Create PodMemoryUsage Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{podmemoryusage_type_id}}\",\n    \"configuration\": {\n        \"pod_label_selector\": \"app=web-app\",\n        \"container_name\": \"web\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure pod memory usage monitoring"
                    },
                    "response": []
                },
                {
                    "name": "Create PodCpuUsage Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{podcpuusage_type_id}}\",\n    \"configuration\": {\n        \"pod_label_selector\": \"app=web-app\",\n        \"container_name\": \"web\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure pod CPU usage monitoring"
                    },
                    "response": []
                },
                {
                    "name": "Create PvcUsage Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{pvcusage_type_id}}\",\n    \"configuration\": {\n        \"pvc_name\": \"web-app-data\",\n        \"pod_label_selector\": \"app=web-app\",\n        \"container_name\": \"web-app\",\n        \"pvc_mount_path\": \"/data\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure PVC usage monitoring with real disk usage collection.\n\nRequired fields:\n- pvc_name: Name of the PVC to monitor\n- pod_label_selector: Label selector to find pods using this PVC\n\nOptional fields:\n- container_name: Specific container to exec into (defaults to first container)\n- pvc_mount_path: Mount path of the PVC (auto-discovered if not provided)\n\nThe system executes 'df' command inside the pod to get real disk usage."
                    },
                    "response": []
                },
                {
                    "name": "Create PodActiveNodes Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{podactivenodes_type_id}}\",\n    \"configuration\": {\n        \"pod_label_selector\": \"app=web-app\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure pod active nodes monitoring"
                    },
                    "response": []
                },
                {
                    "name": "Create RedisConnection Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{redisconnection_type_id}}\",\n    \"configuration\": {\n        \"connection_host\": \"redis.default.svc.cluster.local\",\n        \"connection_port\": 6379,\n        \"connection_password\": \"your-redis-password\",\n        \"connection_db\": 0,\n        \"connection_ssl\": false,\n        \"connection_timeout\": 5\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure Redis connection monitoring with authentication.\n\nFields:\n- connection_host: Redis host (required)\n- connection_port: Redis port (required)\n- connection_password: Redis password (optional, omit if no auth)\n- connection_db: Database number 0-15 (default: 0)\n- connection_ssl: Use SSL/TLS (default: false)\n- connection_timeout: Timeout in seconds (default: 5)"
                    },
                    "response": []
                },
                {
                    "name": "Create PostgreSQLConnection Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{postgresqlconnection_type_id}}\",\n    \"configuration\": {\n        \"connection_host\": \"postgres.default.svc.cluster.local\",\n        \"connection_port\": 5432,\n        \"connection_username\": \"myuser\",\n        \"connection_password\": \"mypassword\",\n        \"connection_database\": \"mydb\",\n        \"connection_ssl\": false,\n        \"connection_timeout\": 10\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure PostgreSQL connection monitoring with authentication.\n\nFields:\n- connection_host: PostgreSQL host (required)\n- connection_port: PostgreSQL port (required)\n- connection_username: Database username (required)\n- connection_password: Database password (required)\n- connection_database: Database name (required)\n- connection_ssl: Use SSL/TLS (default: false, recommended true for production)\n- connection_timeout: Timeout in seconds (default: 5)"
                    },
                    "response": []
                },
                {
                    "name": "Create MongoDBConnection Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{mongodbconnection_type_id}}\",\n    \"configuration\": {\n        \"connection_host\": \"mongodb.default.svc.cluster.local\",\n        \"connection_port\": 27017,\n        \"connection_username\": \"admin\",\n        \"connection_password\": \"admin-password\",\n        \"connection_database\": \"mydb\",\n        \"connection_auth_source\": \"admin\",\n        \"connection_ssl\": false,\n        \"connection_timeout\": 5\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure MongoDB connection monitoring with authentication.\n\nFields:\n- connection_host: MongoDB host (required)\n- connection_port: MongoDB port (required)\n- connection_username: Database username (required)\n- connection_password: Database password (required)\n- connection_database: Database name (required)\n- connection_auth_source: Authentication database (default: admin)\n- connection_ssl: Use SSL/TLS (default: false)\n- connection_timeout: Timeout in seconds (default: 5)"
                    },
                    "response": []
                },
                {
                    "name": "Create MySQLConnection Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{mysqlconnection_type_id}}\",\n    \"configuration\": {\n        \"connection_host\": \"mysql.default.svc.cluster.local\",\n        \"connection_port\": 3306,\n        \"connection_username\": \"root\",\n        \"connection_password\": \"root-password\",\n        \"connection_database\": \"mydb\",\n        \"connection_ssl\": false,\n        \"connection_timeout\": 5\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure MySQL connection monitoring with authentication.\n\nFields:\n- connection_host: MySQL host (required)\n- connection_port: MySQL port (required)\n- connection_username: Database username (required)\n- connection_password: Database password (required)\n- connection_database: Database name (required)\n- connection_ssl: Use SSL/TLS (default: false)\n- connection_timeout: Timeout in seconds (default: 5)"
                    },
                    "response": []
                },
                {
                    "name": "Create KongConnection Metric",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{kongconnection_type_id}}\",\n    \"configuration\": {\n        \"connection_host\": \"kong-admin.default.svc.cluster.local\",\n        \"connection_port\": 8001,\n        \"kong_admin_url\": \"http://kong-admin.default.svc.cluster.local:8001\",\n        \"connection_username\": \"admin\",\n        \"connection_password\": \"admin-password\",\n        \"connection_ssl\": false,\n        \"connection_timeout\": 5\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure Kong API Gateway connection and health monitoring.\n\nFields:\n- connection_host: Kong Admin host (required)\n- connection_port: Kong Admin port (default: 8001)\n- kong_admin_url: Full admin URL (optional, constructed from host:port if not provided)\n- connection_username: Basic auth username (optional)\n- connection_password: Basic auth password (optional)\n- connection_ssl: Use HTTPS (default: false)\n- connection_timeout: Timeout in seconds (default: 5)"
                    },
                    "response": []
                },
                {
                    "name": "Create IngressCertificate Metric (Basic)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{ingresscertificate_type_id}}\",\n    \"configuration\": {\n        \"ingress_name\": \"my-app-ingress\",\n        \"warning_days\": 30\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure TLS certificate monitoring for an Ingress resource (basic configuration).\n\nThis will:\n- Monitor certificate expiration for the specified Ingress\n- Use the application's namespace\n- Auto-discover the TLS secret from Ingress spec\n- Warn when certificate has less than 30 days until expiration\n\nRequired fields:\n- ingress_name: Name of the Ingress resource (required)\n\nOptional fields:\n- warning_days: Days before expiration to show warning (default: 30)"
                    },
                    "response": []
                },
                {
                    "name": "Create IngressCertificate Metric (Full Config)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{ingresscertificate_type_id}}\",\n    \"configuration\": {\n        \"ingress_name\": \"my-app-ingress\",\n        \"ingress_namespace\": \"production\",\n        \"tls_secret_name\": \"my-app-tls\",\n        \"warning_days\": 15\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Configure TLS certificate monitoring for an Ingress resource (full configuration).\n\nAll fields:\n- ingress_name: Name of the Ingress resource (required)\n- ingress_namespace: Namespace where Ingress is located (optional, defaults to application namespace)\n- tls_secret_name: Name of the TLS secret (optional, auto-discovered from Ingress if not provided)\n- warning_days: Days before expiration to warn (optional, default: 30)\n\nMetric collects:\n- Certificate expiration date\n- Days until expiration (or days since expiration if expired)\n- Certificate issuer (e.g., Let's Encrypt)\n- Certificate subject/CN\n- All DNS names (SANs) in the certificate\n- Certificate status: valid, expiring_soon, expired, not_found, error"
                    },
                    "response": []
                },
                {
                    "name": "Create IngressCertificate Metric (Cross-Namespace)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{ingresscertificate_type_id}}\",\n    \"configuration\": {\n        \"ingress_name\": \"shared-ingress\",\n        \"ingress_namespace\": \"ingress-nginx\",\n        \"tls_secret_name\": \"wildcard-cert\",\n        \"warning_days\": 45\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Monitor a certificate from an Ingress in a different namespace.\n\nUseful for:\n- Monitoring shared wildcard certificates\n- Tracking certificates managed in a central namespace\n- Multi-tenant scenarios with shared ingress controllers\n\nExample: Monitor a wildcard certificate *.example.com managed in ingress-nginx namespace, even though your application is in a different namespace."
                    },
                    "response": []
                },
                {
                    "name": "Create KafkaConsumerLag Metric (Basic)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{kafkaconsumerlag_type_id}}\",\n    \"configuration\": {\n        \"kafka_bootstrap_servers\": \"kafka:9092\",\n        \"kafka_consumer_group\": \"my-consumer-group\",\n        \"kafka_lag_threshold\": 1000\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Monitor Kafka consumer lag for all topics in a consumer group (basic PLAINTEXT configuration).\n\nRequired fields:\n- kafka_bootstrap_servers: Kafka broker address (required)\n- kafka_consumer_group: Consumer group name (required)\n\nOptional fields:\n- kafka_topic: Specific topic to monitor (omit to monitor all topics)\n- kafka_lag_threshold: Lag threshold for warnings (default: 1000)\n\nStatus levels:\n- ok: Total lag < threshold\n- warning: Total lag > threshold\n- critical: Total lag > threshold * 10"
                    },
                    "response": []
                },
                {
                    "name": "Create KafkaConsumerLag Metric (With SASL)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"type_id\": \"{{kafkaconsumerlag_type_id}}\",\n    \"configuration\": {\n        \"kafka_bootstrap_servers\": \"kafka.production.svc.cluster.local:9092\",\n        \"kafka_consumer_group\": \"order-processor\",\n        \"kafka_topic\": \"orders\",\n        \"kafka_security_protocol\": \"SASL_PLAINTEXT\",\n        \"kafka_sasl_mechanism\": \"SCRAM-SHA-256\",\n        \"kafka_sasl_username\": \"consumer-user\",\n        \"kafka_sasl_password\": \"consumer-password\",\n        \"kafka_lag_threshold\": 500\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        },
                        "description": "Monitor Kafka consumer lag with SASL authentication.\n\nAll fields:\n- kafka_bootstrap_servers: Kafka broker address (required)\n- kafka_consumer_group: Consumer group name (required)\n- kafka_topic: Specific topic to monitor (optional)\n- kafka_security_protocol: PLAINTEXT, SASL_PLAINTEXT, SASL_SSL, SSL (default: PLAINTEXT)\n- kafka_sasl_mechanism: PLAIN, SCRAM-SHA-256, SCRAM-SHA-512\n- kafka_sasl_username: SASL username\n- kafka_sasl_password: SASL password\n- kafka_lag_threshold: Lag threshold for warning (default: 1000)\n\nMetric collects:\n- Total lag across all partitions\n- Lag per topic\n- Lag per partition\n- Current offset vs log end offset"
                    },
                    "response": []
                },
                {
                    "name": "Update Application Metric",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"configuration\": {\n        \"health_check_url\": \"http://web-app.production.svc.cluster.local:8080/healthz\",\n        \"method\": \"GET\",\n        \"expected_status\": 200,\n        \"timeout_seconds\": 5\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}"
                            ]
                        },
                        "description": "Update an application metric configuration"
                    },
                    "response": []
                },
                {
                    "name": "Delete Application Metric",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}"
                            ]
                        },
                        "description": "Delete an application metric"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Metric Values (Collected Data)",
            "item": [
                {
                    "name": "Get Latest Metrics for Application",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{application_id}}/latest-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{application_id}}",
                                "latest-metrics"
                            ]
                        },
                        "description": "Get the latest collected value for each metric configured for the application. This is the main endpoint for dashboards."
                    },
                    "response": []
                },
                {
                    "name": "List Metric Values (History)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}/values?limit=100",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}",
                                "values"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "100",
                                    "description": "Number of records to return (default: 100, max: 1000)"
                                }
                            ]
                        },
                        "description": "Get historical values for a specific metric. Use limit parameter to control how many records to return."
                    },
                    "response": []
                },
                {
                    "name": "Get Metric Value by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/metric-values/{{metric_value_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "metric-values",
                                "{{metric_value_id}}"
                            ]
                        },
                        "description": "Get a specific metric value by its ID"
                    },
                    "response": []
                },
                {
                    "name": "List Values - Last 10",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}/values?limit=10",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}",
                                "values"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Get last 10 collected values for quick checking"
                    },
                    "response": []
                },
                {
                    "name": "List Values - Last 1000 (Max)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics/{{application_metric_id}}/values?limit=1000",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics",
                                "{{application_metric_id}}",
                                "values"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "Maximum limit"
                                }
                            ]
                        },
                        "description": "Get maximum allowed records (1000) for trend analysis"
                    },
                    "response": []
                }
            ],
            "description": "Read-only endpoints to view collected metric data. Metrics are collected automatically by the cron job every minute."
        },
        {
            "name": "Complete Workflow",
            "item": [
                {
                    "name": "1. Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set(\"workflow_project_id\", jsonData.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Workflow Test Project\",\n    \"description\": \"Testing complete workflow\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "projects"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "2. Create Application",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set(\"workflow_application_id\", jsonData.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"project_id\": \"{{workflow_project_id}}\",\n    \"name\": \"test-app\",\n    \"description\": \"Test application\",\n    \"namespace\": \"default\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "3. Get Metric Types",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    jsonData.forEach(function(mt) {",
                                    "        if (mt.name === 'HealthCheck') {",
                                    "            pm.environment.set('workflow_healthcheck_id', mt.id);",
                                    "        }",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/metric-types",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "metric-types"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "4. Configure Health Check",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"application_id\": \"{{workflow_application_id}}\",\n    \"type_id\": \"{{workflow_healthcheck_id}}\",\n    \"configuration\": {\n        \"health_check_url\": \"http://test-app.default.svc.cluster.local:8080/health\",\n        \"method\": \"GET\",\n        \"expected_status\": 200,\n        \"timeout_seconds\": 10\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/application-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "application-metrics"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "5. List Application Metrics",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{workflow_application_id}}/metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{workflow_application_id}}",
                                "metrics"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "6. Get Latest Collected Metrics",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/applications/{{workflow_application_id}}/latest-metrics",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "applications",
                                "{{workflow_application_id}}",
                                "latest-metrics"
                            ]
                        },
                        "description": "NOTE: Wait 1-2 minutes after step 4 for the cron job to collect metrics before running this request"
                    },
                    "response": []
                }
            ],
            "description": "Run this folder to test the complete workflow from project creation to viewing collected metrics. NOTE: Wait 1-2 minutes between step 4 and step 6 for metrics to be collected."
        }
    ],
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8080",
            "type": "string"
        }
    ]
}